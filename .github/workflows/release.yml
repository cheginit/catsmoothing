# This file is autogenerated by maturin v1.7.6
# To update, run
#
#    maturin generate-ci github
#
name: Release

on:
  push:
    tags:
    - v*
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  test:
    uses: ./.github/workflows/test.yml
  release-notes:
    name: Create Release Notes
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Generate Changelog
      run: |-
        echo "# Release Notes" > ${{ github.workflow }}-CHANGELOG.md
        PAT="^## "
        L1=$(grep -n "$PAT" CHANGELOG.md | sed -n '2p' | cut -d ":" -f 1)
        L2=$(grep -n "$PAT" CHANGELOG.md | sed -n '3p' | cut -d ":" -f 1)
        if [ -z "$L2" ]; then
            tail -n +$L1 CHANGELOG.md >> ${{ github.workflow }}-CHANGELOG.md
        else
            awk "NR > $L1 && NR < $((L2 - 1))" CHANGELOG.md >> ${{ github.workflow }}-CHANGELOG.md
        fi
    - name: Remove extra spaces
      run: |-
        sed -i 's/-   /- /g' ${{ github.workflow }}-CHANGELOG.md
    - name: Github Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workflow }}-CHANGELOG.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  linux:
    runs-on: ${{ matrix.platform.runner }}
    needs: test
    strategy:
      matrix:
        platform:
        - runner: ubuntu-22.04
          target: x86_64
        - runner: ubuntu-22.04
          target: x86
        - runner: ubuntu-22.04
          target: aarch64
        - runner: ubuntu-22.04
          target: armv7
        - runner: ubuntu-22.04
          target: s390x
        - runner: ubuntu-22.04
          target: ppc64le
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        args: --release --out dist --find-interpreter
        sccache: 'true'
        manylinux: auto
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-linux-${{ matrix.platform.target }}
        path: dist

  musllinux:
    runs-on: ${{ matrix.platform.runner }}
    needs: test
    strategy:
      matrix:
        platform:
        - runner: ubuntu-22.04
          target: x86_64
        - runner: ubuntu-22.04
          target: x86
        - runner: ubuntu-22.04
          target: aarch64
        - runner: ubuntu-22.04
          target: armv7
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        args: --release --out dist --find-interpreter
        sccache: 'true'
        manylinux: musllinux_1_2
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-musllinux-${{ matrix.platform.target }}
        path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    needs: test
    strategy:
      matrix:
        platform:
        - runner: windows-latest
          target: x64
        - runner: windows-latest
          target: x86
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
        architecture: ${{ matrix.platform.target }}
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        args: --release --out dist --find-interpreter
        sccache: 'true'
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-windows-${{ matrix.platform.target }}
        path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    needs: test
    strategy:
      matrix:
        platform:
        - runner: macos-13
          target: x86_64
        - runner: macos-14
          target: aarch64
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-python@v5
      with:
        python-version: 3.x
    - name: Build wheels
      uses: PyO3/maturin-action@v1
      with:
        target: ${{ matrix.platform.target }}
        args: --release --out dist --find-interpreter
        sccache: 'true'
    - name: Upload wheels
      uses: actions/upload-artifact@v4
      with:
        name: wheels-macos-${{ matrix.platform.target }}
        path: dist

  sdist:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v4
    - name: Build sdist
      uses: PyO3/maturin-action@v1
      with:
        command: sdist
        args: --out dist
    - name: Upload sdist
      uses: actions/upload-artifact@v4
      with:
        name: wheels-sdist
        path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
    needs: [linux, musllinux, windows, macos, sdist]
    permissions:
      # Use to sign the release artifacts
      id-token: write
      # Used to upload release artifacts
      contents: write
      # Used to generate artifact attestation
      attestations: write
    steps:
    - uses: actions/download-artifact@v4
    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-path: wheels-*/*
    - name: Publish to PyPI
      if: startsWith(github.ref, 'refs/tags/')
      uses: PyO3/maturin-action@v1
      with:
        command: upload
        args: --non-interactive --skip-existing wheels-*/*
